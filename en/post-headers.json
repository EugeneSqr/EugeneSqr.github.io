[{"title":"Fullscreen Videos In IOS","dateCreated":"2017-11-17","id":"fullscreen-videos-ios","tags":["ios","video","fullscreen"],"header":"#### How can I get HTML5 video in full screen in IOS?\nIt appeared harder than expected. Quick searching resulted in the following:\n1. <code>webkitRequestFullScreen</code> – a standard way for webkit browsers (Chrome, Safari). The problem is you don't find the method on IOS mobile devices.\n2. <code>requestFullscreen</code> – how about this, in accordance with W3C standard? Same thing.\n3. Let's see browser support for [full screen API](https://caniuse.com/#feat=fullscreen). It appears the API isn't supported by Safari in IOS. It is also the case for Chrome there.\n\n#### What to do?\nI found mentioning the <code>webkitendfullscreen</code> event [here](https://stackoverflow.com/questions/18489680/ios-safari-detect-when-user-clicks-done-in-native-player). A pair event <code>webkitendfullscreen</code> followed right after it. There had to be more... Finally [this excellent article](https://developer.apple.com/library/content/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/ControllingMediaWithJavaScript/ControllingMediaWithJavaScript.html) explained two key methods:\n- <code>webkitEnterFullScreen</code>\n- <code>webkitExitFullScreen</code>","url":"/en/fullscreen-videos-ios.html"},{"title":"Gulp Tasks For Creating A Static Website","dateCreated":"2017-06-22","id":"gulp-tasks-for-creating-static-website","tags":["gulp"],"header":"#### Data storage\nBefore describing data manipulations that result in final markup, we need to say a few words on how the data is stored. Multiple arguments for plain text in text files were listed in the previous article. But what directory structure to pick?\n\nThe obvious step would be to separate site's content from its representation. That's why content is placed into the \"model\" directory while representation resides in the \"view\" folder. We will focus on the \"model\" part in the rest of the post.\n\n<pre>\n$ tree source/model/ -L 2 | sed 6q\nsource/model/\n├── localizable-strings-static.json\n└── posts\n    ├── 2014-01-24 color-git-branch-name-in-bash-prompt\n    ├── 2014-01-31 weather-forecast-widget\n    ├── 2014-04-22 making-ie-bho-enabled-by-default\n</pre>","url":"/en/gulp-tasks-for-creating-static-website.html"},{"title":"Minimalistic Approach For Creating Personal Website","dateCreated":"2017-05-27","id":"minimalistic-approach-for-creating-personal-website","tags":[],"header":"#### Years Go By\nFollowing mainstream practices gets replaced by pragmatism and maintenance costs reduction. New experience forced me to rethink my attitude to this site. Let me outline the major ideas below.\n\n#### Single Page Design Isn't Needed\nThe main advantages of SPA are responsive user interface and simplified state management. If webpages look the same, single page application allows downloading the template once and then reusing it.\n\nThe main downsides are SEO and need for extra libraries to control routing and history. If one follows modern techniques, he/she will most likely end up with one of the popular frameworks (Angular, Amber, React, Aurelia etc.).\n\nFor a simple website user interface responsiveness isn't that important, because user interactions are rare. State management is not a problem due to the same reason. The amount of content related to everything else on the page is typically high, therefore webpages differ from each other significantly.","url":"/en/minimalistic-approach-for-creating-personal-website.html"},{"title":"Second Iteration Completed","dateCreated":"2014-08-13","id":"second-iteration-completed","tags":[],"header":"#### New features\nI've just finished the second iteration of building my personal web site.\n- [dates localization](/en/dates-localization-in-angular.html)\n- post listing paging\n- server side storage optimization\n- [google analytics](/en/google-analytics-in-angular.html)\n- default language changed to Russian\n\n#### Postponed tasks\n- old articles migration, because I decided to focus on new content and leave my old blog without changes\n- automated spell checking, because the number of posts I write is relatively small; I should be able to handle spell checking with third party tools manually.","url":"/en/second-iteration-completed.html"},{"title":"Google Analytics In Angular","dateCreated":"2014-08-12","id":"google-analytics-in-angular","tags":["Google Analytics","Angular"],"header":"#### A good start is important\nAdding google analytics to a site is straightforward. There are tons of documentation/articles/posts on the Internet about it. Here I'm going to show a possible way of adding google analytics to a single page app (based on Angular) and counting page views. The approach can be further extended to collect other metrics but I think counting page views is a good start.\n\nIn order to make google analytics work one have to add GATC (google analytics tracking code) snippet to every page of a site. The snippet can be taken from your google analytics account's admin page. Google changes things from time to time, at some point the code below is no longer valid but right now I have something like this:","url":"/en/google-analytics-in-angular.html"},{"title":"Dates Localization In Angular","dateCreated":"2014-08-11","id":"dates-localization-in-angular","tags":["Angular","date","localization"],"header":"#### Why not using angular built in localization capabilities?\nLet's examine what angular platform [can offer](https://docs.angularjs.org/guide/i18n). They suggest specifying one language per page by referencing the corresponding version of localization script. One can speculate on this approach by adding some script referencing logic on a server, but do I really need to reload the entire page just to change language context?\n\nFor text localization I use [angular-translate](https://github.com/angular-translate/angular-translate) and I really like how it handles translation on the fly. I simply identify the piece of text I need to translate and set the desired language; the text gets changed without reloading the page. What if I could use a similar approach for formatting my dates? Something like <code>mysticalFormatter.format(myDate, 'ru')</code>.\n\n#### Why not using angular-translate built in dates localization capabilities?\nWell, because I didn't find any. Moreover what I really need is too specific to hand it over to any third party libraries. First I need only two languages (English and Russian). Second I don't need tons of different formats: one per language is sufficient. Therefore I need months localized plus two format functions.","url":"/en/dates-localization-in-angular.html"},{"title":"The Site Has Finally Gone Live!","dateCreated":"2014-07-28","id":"the-site-has-finally-gone-live","tags":[],"header":"#### At last\nI'm excited to announce my site's first release! Although it isn't feature rich I consider this event as a very important milestone in my development career.\n\nIt's all began in 2012 when I first published my thoughts into Internet [using blogspot](http://eskurikhin.blogspot.com) blogging platform. I was writing mainly about .net stuff and only in English.\n\nA year ago I came to conclusion that I didn't want to be a pure .net developer. Instead I wanted to expand the boundaries and explore things outside of Microsoft's ecosystem. I installed Linux and started playing around Node, Mongo, Angular, JavaScript, C and vim.\n\nTwo month before this day I decided it's time to examine my new skills. By that time I had something around 20 posts in my blog and I wasn't really happy how blogger was serving them. So I started working on this site during my spare time.","url":"/en/the-site-has-finally-gone-live.html"},{"title":"Optimizing The Site","dateCreated":"2014-07-26","id":"optimizing-the-site","tags":["optimization","node","gruntjs","performance"],"header":"#### Why optimize?\nI've finished the first iteration of building my personal web site; it means it's time to think about web optimization. What if I can keep things as they are now? Let's examine [gtmetrix](http://gtmetrix.com/) results: \n\n<img class=\"img-responsive thumbnail center-block\" src=\"https://res.cloudinary.com/eugenesqr/image/upload/v1471942129/website-performance-optimization/gtmetrix-before-optimization.png\" alt=\"Performance test results before optimization\" />\n\nWhat a shame. I don't care much about \"F\" and \"C\" grades, but those digits to the right make me cry. I'm currently using free hosting at heroku so I can't demand super low response time from them. However the page size and the total number of requests have no excuse.","url":"/en/optimizing-the-site.html"},{"title":"Selenium Forbids Opening Links In A New Tab Instead Of A New Window In Firefox","dateCreated":"2014-07-18","id":"selenium-forbids-opening-links-in-new-tab","tags":["Selenium","Firefox","Tab"],"header":"#### Test opening new tab? Not so fast\nRecently I tested some stuff with Selenium WebDriver and noticed that Firefox always opens links with <code>target=\"_blank\"</code> in a new window. I found that I can change this behavior by altering FF profile like this:\n\n<pre class=\"prettyprint\">\nvar options = new FirefoxProfile();\noptions.SetPreference(\"browser.link.open_newwindow\", 3);\nreturn new FirefoxDriver(options);\n</pre>","url":"/en/selenium-forbids-opening-links-in-new-tab.html"},{"title":"Selectively Gzipping Your Site","dateCreated":"2014-06-02","id":"selectively-gzipping-your-site","tags":["Express","Gzip","Node"],"header":"#### Motivation\nI decided to build my personal web site. The key idea was to keep things as simple and fast as possible while sticking with modern cool techniques like SPA and MVVM.\n\nI picked the Node + Angular + MongoDB combo as a foundation and started hacking. Soon I realized that I need some data compression to keep things really small.\n\n#### The alternatives\nBasically I had two options: \n- compress all traffic on the fly using special middleware;\n- compress files beforehand, keep them on a server and let the browser know that the data was compressed.","url":"/en/selectively-gzipping-your-site.html"},{"title":"Making IE Browser Helper Objects Enabled By Default","dateCreated":"2014-04-22","id":"making-ie-bho-enabled-by-default","tags":["BHO","c++","Internet Explorer"],"header":"#### The problem\nSuppose you write a great BHO to enhance user experience on the Web. Due to security reasons every time user installs your BHO and launches Internet Explorer he/she is prompted to enable the piece of software. At first glance - not a big deal, one extra click won't bother anybody. However this IE behavior causes a serious problem. The <code>IObjectWithSite::SetSite</code> method isn't triggered even after one pushes \"enable\" button. <code>DWebBrowserEvents2</code> aren't fired too. Therefore there is no way to determine that user accepted the BHO and it's time to rock. [Here](http://social.msdn.microsoft.com/Forums/ie/en-US/c6f64c9e-5a34-4d6f-a20e-7bc4fc8c6bac/enable-event-for-bho-in-ie9?forum=ieextensiondevelopment) the question is explained in more details.\n\n#### Let's find out what's can be done\nThe first step to solve the problem is described [here](http://social.technet.microsoft.com/Forums/windowsserver/en-US/6f4630a1-cbb0-41f6-8f54-b533cf451fc9/ie9-prompts-user-to-enabledisable-ie-addon-on-first-use?forum=winserverGP). It appeared that we can \"white list\" our BHO by adding its CLSID to the right place. Of course it is inappropriate to have users set thing up this way themselves. We need to automate the process somehow.","url":"/en/making-ie-bho-enabled-by-default.html"},{"title":"Creating Weather Forecast Widget Using Node.js And Redis","dateCreated":"2014-01-31","id":"weather-forecast-widget","tags":["Cairo","Express","Mustache","Node","Canvas","Redis","Weather Widget"],"header":"#### What we're going to build\nIn this post I'm going to describe a process of creating a simple weather forecast widget. I'm going to use Redis as a persistance mechanism, Node.js + Express with Mustache template engine as a foundation for web interface; and a module based on Cairo called \"node canvas\" for generating images serverside.\n\n#### Weather aggregator\nFirst we need to retrieve raw weather forecast data, parse it, generate images \"on the fly\" and persist them to Redis. Let's keep these pieces of functionality in a first app called \"weather-aggregator\". It's going to be a simple console app that can be triggered in a shell script with a certain time interval. [Yandex](http://www.yandex.ru/) weather forecast service looks nice to me so I'm going to use it.\n\nLet's take a look at package.json to see the list of dependencies:\n- [request](https://github.com/mikeal/request) - for getting data from service;\n- [xml2js](https://github.com/Leonidas-from-XIV/node-xml2js) - for XML parsing;\n- [canvas](https://github.com/learnboost/node-canvas) - for generating images;\n- [redis](https://github.com/mranney/node_redis) - guess what :)","url":"/en/weather-forecast-widget.html"},{"title":"Coloring Your Git Branch Name","dateCreated":"2014-01-24","id":"color-git-branch-name-in-bash-prompt","tags":["Bash","Cygwin","Git"],"header":"#### Desired Effect\nIf you use git often then you might find helpful having current branch name right in the command prompt. Highlighting \"dirty\" branches is also a good thing.\n\n#### Entry Point\nI started tweaking my bash prompt by reading [this article](http://mediadoneright.com/content/ultimate-git-ps1-bash-prompt); a lot of interesting tricks were described there. Unfortunately there were too much for me, I needed a more simpler solution with less text on screen (and in configs). So I came up with the following script:\n\n<pre class=\"prettyprint\">\nRed=\"\\[\\033[1;31m\\]\"\nGreen=\"\\[\\033[1;32m\\]\"\nReset=\"\\[$(tput sgr0)\\]\"\n\nexport PS1='$(git branch &>/dev/null;\\\nif [ $? -eq 0 ]; then \\\n    echo \"$(echo `git status` | grep \"nothing to commit\" > /dev/null 2>&1; \\\n    if [ \"$?\" -eq \"0\" ]; then \\\n        echo \"'$Green'\"$(__git_ps1 \"%s\")\"'$Reset'\"; \\\n    else \\\n       echo \"'$Red'\"$(__git_ps1 \"%s\")\"'$Reset'\"; \\\n    fi) \"; \\\nfi)'$PS1\n</pre>","url":"/en/color-git-branch-name-in-bash-prompt.html"}]